{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)))
            (or (pair %getBalance (address %owner) (contract nat))
                (pair %getTotalSupply unit (contract nat))))
        (pair %transfer (address %from) (pair (address %to) (nat %value)))) ;
  storage
    (pair (nat %total_supply)
          (pair (big_map %ledger address (pair (nat %balance) (map %allowances address nat)))
                (pair (big_map %metadata string bytes)
                      (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))) ;
  code { LAMBDA
           (pair address
                 (pair nat
                       (pair (big_map address (pair nat (map address nat)))
                             (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))
           (pair nat (map address nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { EMPTY_MAP address nat ; PUSH nat 0 ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair nat (map address nat)) address)
                 (pair nat
                       (pair (big_map address (pair nat (map address nat)))
                             (pair (big_map string bytes) (big_map nat (pair nat (map string bytes)))))))
           nat
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DROP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SENDER ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 5 ;
                     DIG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CAR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CAR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             SENDER ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             COMPARE ;
             NEQ ;
             IF { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SENDER ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  PAIR ;
                  PAIR ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 2 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  SENDER ;
                  UPDATE ;
                  SWAP ;
                  CAR ;
                  PAIR }
                { DIG 5 ; DROP } ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             CAR ;
             SUB ;
             ABS ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CAR ;
             DIG 2 ;
             DIG 5 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             DIG 2 ;
             CAR ;
             PAIR ;
             DUP ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             DIG 3 ;
             DIG 2 ;
             CAR ;
             ADD ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

